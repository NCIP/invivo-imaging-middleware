package gov.nih.nci.ivi.dicomdataservice.service.globus;

import gov.nih.nci.ivi.dicomdataservice.service.DICOMDataServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the DICOMDataServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class DICOMDataServiceProviderImpl{
	
	DICOMDataServiceImpl impl;
	
	public DICOMDataServiceProviderImpl() throws RemoteException {
		impl = new DICOMDataServiceImpl();
	}
	

    public gov.nih.nci.ivi.dicomdataservice.stubs.RetrieveDICOMDataResponse retrieveDICOMData(gov.nih.nci.ivi.dicomdataservice.stubs.RetrieveDICOMDataRequest params) throws RemoteException {
    gov.nih.nci.ivi.dicomdataservice.stubs.RetrieveDICOMDataResponse boxedResult = new gov.nih.nci.ivi.dicomdataservice.stubs.RetrieveDICOMDataResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveDICOMData(params.getCQLQuery().getCQLQuery()));
    return boxedResult;
  }

    public gov.nih.nci.ivi.dicomdataservice.stubs.SubmitDICOMDataResponse submitDICOMData(gov.nih.nci.ivi.dicomdataservice.stubs.SubmitDICOMDataRequest params) throws RemoteException {
    gov.nih.nci.ivi.dicomdataservice.stubs.SubmitDICOMDataResponse boxedResult = new gov.nih.nci.ivi.dicomdataservice.stubs.SubmitDICOMDataResponse();
    boxedResult.setTransferServiceContextReference(impl.submitDICOMData(params.getSubmissionInformation().getSubmissionInformation()));
    return boxedResult;
  }

    public gov.nih.nci.ivi.dicomdataservice.stubs.RetrieveDICOMDataProgressivelyResponse retrieveDICOMDataProgressively(gov.nih.nci.ivi.dicomdataservice.stubs.RetrieveDICOMDataProgressivelyRequest params) throws RemoteException {
    gov.nih.nci.ivi.dicomdataservice.stubs.RetrieveDICOMDataProgressivelyResponse boxedResult = new gov.nih.nci.ivi.dicomdataservice.stubs.RetrieveDICOMDataProgressivelyResponse();
    boxedResult.setEnumerationResponseContainer(impl.retrieveDICOMDataProgressively(params.getCQLQuery().getCQLQuery()));
    return boxedResult;
  }

}
