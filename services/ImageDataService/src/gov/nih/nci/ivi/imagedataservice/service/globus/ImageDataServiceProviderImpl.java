package gov.nih.nci.ivi.imagedataservice.service.globus;

import gov.nih.nci.ivi.imagedataservice.service.ImageDataServiceImpl;

import java.rmi.RemoteException;

/** 
 * DO NOT EDIT:  This class is autogenerated!
 *
 * This class implements each method in the portType of the service.  Each method call represented
 * in the port type will be then mapped into the unwrapped implementation which the user provides
 * in the ImageDataServiceImpl class.  This class handles the boxing and unboxing of each method call
 * so that it can be correclty mapped in the unboxed interface that the developer has designed and 
 * has implemented.  Authorization callbacks are automatically made for each method based
 * on each methods authorization requirements.
 * 
 * @created by Introduce Toolkit version 1.2
 * 
 */
public class ImageDataServiceProviderImpl{
	
	ImageDataServiceImpl impl;
	
	public ImageDataServiceProviderImpl() throws RemoteException {
		impl = new ImageDataServiceImpl();
	}
	

    public gov.nih.nci.ivi.imagedataservice.stubs.RetrieveImageDataResponse retrieveImageData(gov.nih.nci.ivi.imagedataservice.stubs.RetrieveImageDataRequest params) throws RemoteException {
    gov.nih.nci.ivi.imagedataservice.stubs.RetrieveImageDataResponse boxedResult = new gov.nih.nci.ivi.imagedataservice.stubs.RetrieveImageDataResponse();
    boxedResult.setTransferServiceContextReference(impl.retrieveImageData(params.getCQLQuery().getCQLQuery()));
    return boxedResult;
  }

    public gov.nih.nci.ivi.imagedataservice.stubs.SubmitImageDataResponse submitImageData(gov.nih.nci.ivi.imagedataservice.stubs.SubmitImageDataRequest params) throws RemoteException {
    gov.nih.nci.ivi.imagedataservice.stubs.SubmitImageDataResponse boxedResult = new gov.nih.nci.ivi.imagedataservice.stubs.SubmitImageDataResponse();
    boxedResult.setTransferServiceContextReference(impl.submitImageData(params.getSubmissionInformation().getSubmissionInformation()));
    return boxedResult;
  }

}
