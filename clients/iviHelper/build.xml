<project name="ivi-SDK" default="all" basedir=".">
	<description>
    simple example build file
  </description>
	<!-- set global properties for this build -->
	<property name="src" location="src" />
	<property name="build" location="build" />
	<property name="build.lib" location="${build}/lib" />
	<property name="build.classes" location="${build}/classes" />
	<property name="resources" location="resources" />
	<property name="lib" location="lib" />
	<property name="ext" location="ext" />
	<property environment="env" />

	<!-- Important test directories and files -->
	<property name="test.dir" value="test" />
	<property name="test.src.dir" value="${test.dir}/src" />
	<property name="test.lib.dir" value="${test.dir}/lib" />
	<property name="test.classes.dir" value="${build}/test/classes" />
	<property name="test.log.dir" value="test/logs" />
	<property name="test.jar" value="${build.lib}/iviHelper-tests.jar" />
	<property name="junit.results.dir" value="${test.log.dir}/junit" />

	<property name="javadoc.dir" value="${build}/javadoc" />
	
	<import file="${test.dir}/test.xml" />

	<target name="init">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
		<mkdir dir="${build.lib}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${test.classes.dir}" />
	</target>

	<path id="sourcepath">
		<!--     <dirset dir="${src}"> -->
		<!--       <include name="*"/> -->
		<!--       <exclude name="CVS"/> -->
		<!--       <exclude name="filesystem"/> -->
		<!--       <exclude name="matlab"/> -->
		<!--     </dirset> -->
		<pathelement location="${src}" />
	</path>
	
	<path id="cagridsourcepath">
		<dirset dir="${env.CAGRID_LOCATION}/projects/data/src/java">
			<include name="*" />
			<exclude name="CVS" />
		</dirset>
		<pathelement location="${env.CAGRID_LOCATION}/projects/data/build/stubs/src" />
	</path>

	<path id="classpath">
		<!-- order matters.  need data jars first -->
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
		<fileset dir="${ext}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${env.GLOBUS_LOCATION}/lib/addressing-1.0.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/axis-url.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/axis.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/bootstrap.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/cog-axis.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/cog-jglobus.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/cog-tomcat.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/cog-url.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/commonj.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/commons-beanutils.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/commons-cli-2.0.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/commons-codec-1.3.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/commons-collections-3.0.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/commons-digester.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/commons-discovery.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/commons-logging.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/concurrent.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/cryptix-asn1.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/cryptix.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/cryptix32.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/globus_usage_core.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/globus_usage_packets_common.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/globus_wsrf_tools_test.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/jaxrpc.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/jce-jdk13-125.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/jgss.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/junit.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/log4j-1.2.8.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/naming-common.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/naming-factory.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/naming-java.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/naming-resources.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/opensaml.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/puretls.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/resolver.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/saaj.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/servlet.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsdl4j.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_common.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_core.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_core_registry.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_core_registry_stubs.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_core_samples_authzService.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_core_samples_authzService_stubs.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_core_samples_counter.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_core_samples_counter_stubs.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_core_samples_mgmt.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_core_samples_mgmt_stubs.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_core_stubs.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_provider_jce.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_test.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_test_interop.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_test_interop_stubs.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_test_unit.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_test_unit_stubs.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wsrf_tools.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/wss4j.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/xalan.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/xercesImpl.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/xml-apis.jar" />
		<pathelement location="${env.GLOBUS_LOCATION}/lib/xmlsec.jar" />
	</path>

	<path id="run.classpath">
		<path refid="classpath" />
		<pathelement location="resources/images" />
		<pathelement location="resources/portal/common" />
		<pathelement location="resources/portal/dorian" />
		<pathelement location="resources/portal/gridca" />
		<fileset dir="${build.lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- =============================================================== -->
	<!-- The Test Classpath                                                   -->
	<!-- =============================================================== -->
	<path id="test.classpath">
		<path refid="run.classpath" />
		<fileset dir="${test.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${test.classes.dir}" />
	</path>


	<target name="writeclasspath" description="write classpath to .ant-classpath file">
		<pathconvert pathsep="${line.separator}" property="echo.classpath" refid="classpath">
		</pathconvert>
		<echo message="${echo.classpath}" file=".ant-classpath.tmp" />
		<move file=".ant-classpath.tmp" tofile=".ant-classpath" />
	</target>

	<target name="writesrcpath" description="write srcpath to .ant-srcpath file">
		<pathconvert pathsep="${line.separator}" property="echo.srcpath" refid="sourcepath">
		</pathconvert>
		<echo message="${echo.srcpath}" file=".ant-srcpath.tmp" />
		<!--     <pathconvert pathsep="${line.separator}" -->
		<!--                  property="echo.cagridsrcpath" -->
		<!--                  refid="cagridsourcepath"> -->
		<!--     </pathconvert> -->
		<!--     <echo message="${echo.cagridsrcpath}" append="true" file=".ant-srcpath.tmp"/>   -->
		<move file=".ant-srcpath.tmp" tofile=".ant-srcpath" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Compile the java code from ${src} into ${build.classes} -->
		<javac srcdir="${src}" destdir="${build.classes}" debug="on" classpathref="classpath">
		</javac>
	</target>

	<!-- =============================================================== -->
	<!-- Compiles the test source code                                        -->
	<!-- =============================================================== -->
	<target name="compile-tests" depends="init" description="compiles.">
		<mkdir dir="${test.classes.dir}" />
		<javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" debug="on" deprecation="off" optimize="off">
			<classpath refid="test.classpath" />
		</javac>
	</target>

	<!-- ============================================================== -->
	<!-- Creates the jar files                                          -->
	<!-- ============================================================== -->
	<target name="jar-tests" depends="compile-tests" description="Builds the Jar Files">
		<mkdir dir="${test.lib.dir}" />
		<jar jarfile="${test.jar}" basedir="${test.classes.dir}">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
			</manifest>
		</jar>
	</target>

	<target name="jar" depends="compile" description="generate the distribution jar">
		<!-- Put everything in ${build.classes} into the XXXX-${DSTAMP}.jar file -->
		<jar jarfile="${build.lib}/iviAIMHelper.jar" basedir="${build.classes}">
			<include name="**/AIMDataServiceHelper.*" />
		</jar>
		<jar jarfile="${build.lib}/iviAIMTCGAHelper.jar" basedir="${build.classes}">
			<include name="**/AIMTCGADataServiceHelper.*" />
		</jar>
		<jar jarfile="${build.lib}/iviAIMv1Helper.jar" basedir="${build.classes}">
			<include name="**/AIMv1DataServiceHelper.*" />
		</jar>
		<jar jarfile="${build.lib}/iviDICOMHelper.jar" basedir="${build.classes}">
			<include name="**/DICOMDataServiceHelper.*" />
		</jar>
		<jar jarfile="${build.lib}/iviNCIAHelper.jar" basedir="${build.classes}">
			<include name="**/NCIADataServiceHelper.*" />
		</jar>
		<jar jarfile="${build.lib}/iviGenericImageHelper.jar" basedir="${build.classes}">
			<include name="**/ImageDataServiceHelper.*" />
		</jar>
	</target>

	<!-- =================================================================== -->
	<!-- Builds Code Docuementation                                          -->
	<!-- =================================================================== -->
	<target name="javadoc" depends="compile" description="Creates the API documentation.">
		<javadoc packagenames="*" destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="${service.name} API">

			<sourcepath>
				<pathelement path="${src}" />
			</sourcepath>

			<classpath>
				<path refid="classpath" />
			</classpath>

			<tag name="todo" scope="all" description="To do:" />
			<tag name="created" scope="all" description="Created On:" />

		</javadoc>
	</target>
	
	<target name="all" depends="jar,jar-tests" description="compile everything" />
	
	<target name="clean" description="clean up">
		<!-- Delete the ${build} directory tree -->
		<delete dir="${build}" />
	</target>

</project>

